{"ast":null,"code":"import * as types from \"./cartType\";\nimport axiosClient from \"../../../utils/axios-config\";\nimport { getSession } from \"next-auth/client\";\nimport axios from \"axios\";\nexport function addToCart(param) {\n  return async dispatch => {\n    const session = await getSession();\n    console.log(\"action====\");\n    console.log(param.plates[0].plateId);\n    dispatch({\n      type: types.CART_ADD_PLATE_REQUEST\n    });\n    dispatch({\n      type: types.CART_ADD_ITEM,\n      payload: param.plates[0].plateId\n    });\n    dispatch({\n      type: types.CART_INCREASE_ITEM\n    });\n\n    if (session) {\n      try {\n        const res = await axiosClient.post(\"basket\", param);\n        dispatch({\n          type: types.CART_ADD_PLATE_SUCCESS,\n          payload: res\n        });\n        return res;\n      } catch (e) {\n        dispatch({\n          type: types.CART_ADD_PLATE_FAILURE\n        });\n        return Promise.reject(e);\n      }\n    }\n  };\n}\nexport function addItemsToCart(param) {\n  console.log(\"addItemsToCart\");\n  console.log(param);\n  return async dispatch => {\n    dispatch({\n      type: types.CART_ADD_MULTI_PLATE_REQUEST\n    });\n\n    try {\n      const res = await axiosClient.post(\"basket\", param);\n      dispatch({\n        type: types.CART_ADD_MULTI_PLATE_SUCCESS,\n        payload: res\n      });\n      console.log(\"res==>>\");\n      console.log(res);\n      return res;\n    } catch (e) {\n      dispatch({\n        type: types.CART_ADD_MULTI_PLATE_FAILURE\n      });\n      return Promise.reject(e);\n    }\n  };\n}\nexport const getUserBasket = deliveryType => {\n  return async dispatch => {\n    try {\n      const res = axiosClient.get(`basket?deliveryType=${deliveryType}`);\n      return res;\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n};\nexport function increaseItemToCart(basketItemId, deliveryType) {\n  let param = {\n    deliveryType: deliveryType\n  };\n  return async dispatch => {\n    dispatch({\n      type: types.CART_INCREASE_ITEM_REQUEST\n    });\n\n    try {\n      const res = await axiosClient.put(`/basket/add/${basketItemId}`, param);\n      dispatch({\n        type: types.CART_INCREASE_ITEM_SUCCESS,\n        payload: res\n      });\n      return res;\n    } catch (e) {\n      dispatch({\n        type: types.CART_INCREASE_ITEM_FAILURE\n      });\n      return Promise.reject(e);\n    }\n  };\n}\nexport function decreaseItemToCart(basketItemId, deliveryType) {\n  let param = {\n    deliveryType: deliveryType\n  };\n  return async dispatch => {\n    dispatch({\n      type: types.CART_DECREASE_ITEM_REQUEST\n    });\n\n    try {\n      const res = await axiosClient.put(`/basket/subtract/${basketItemId}`, param);\n      dispatch({\n        type: types.CART_DECREASE_ITEM_SUCCESS,\n        payload: res\n      });\n      return res;\n    } catch (e) {\n      dispatch({\n        type: types.CART_DECREASE_ITEM_FAILURE\n      });\n      return Promise.reject(e);\n    }\n  };\n}\nexport function removeInCart(basketItemId, deliveryType, plateID) {\n  return async dispatch => {\n    const session = await getSession();\n    dispatch({\n      type: types.CART_REMOVE_PLATE_REQUEST\n    });\n    dispatch({\n      type: types.CART_REMOVE_ITEM,\n      payload: plateID\n    });\n    dispatch({\n      type: types.CART_DECREASE_ITEM\n    });\n\n    if (session) {\n      try {\n        const res = await axiosClient.delete(`/basket/delete/${basketItemId}`, {\n          data: {\n            deliveryType: deliveryType\n          }\n        });\n        dispatch({\n          type: types.CART_REMOVE_PLATE_SUCCESS,\n          payload: res\n        });\n        return res;\n      } catch (e) {\n        dispatch({\n          type: types.CART_REMOVE_PLATE_FAILURE\n        });\n        return Promise.reject(e);\n      }\n    }\n  };\n}\nexport function setCartItems(cartItems) {\n  return async dispatch => {\n    dispatch({\n      type: types.CART_SET_ITEM_COUNT,\n      payload: cartItems\n    });\n  };\n}\nexport function setCartItemsWithSessionFlag() {\n  return async dispatch => {\n    dispatch({\n      type: types.CART_SET_ITEM_COUNT_WITH_SESSION_FLAG\n    });\n  };\n}\nexport function setCartItemsWithoutSessionFlag() {\n  return async dispatch => {\n    dispatch({\n      type: types.CART_SET_ITEM_COUNT_WITHOUT_SESSION_FLAG\n    });\n  };\n}","map":null,"metadata":{},"sourceType":"module"}