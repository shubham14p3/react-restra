{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Form, Input, Button, message } from 'antd';\nimport { useDispatch } from 'react-redux';\nimport { signIn, csrfToken } from 'next-auth/client';\nimport { userLogin } from '../../redux/actions/auth/authAction';\n\nvar Login = function Login(props) {\n  var dispatch = useDispatch(); //\n\n  var onFinish = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var vals, userData, callbackUrl, user;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('Received values of form: ', values);\n              _context.prev = 1;\n              vals = {\n                login: values.username.trim(),\n                password: values.password\n              };\n              _context.next = 5;\n              return dispatch(userLogin(vals));\n\n            case 5:\n              userData = _context.sent;\n              console.log('cheffyCredentials', userData);\n\n              if (userData && userData.token) {\n                callbackUrl = '/';\n\n                if (userData.data.userResponse.user_type == 'user') {\n                  callbackUrl = '/food';\n                } else if (userData.data.userResponse.user_type == 'chef') {\n                  callbackUrl = '/chef';\n                } else if (userData.data.userResponse.user_type == 'admin') {\n                  callbackUrl = '/kitchen';\n                } else if (userData.data.userResponse.user_type == 'driver') {\n                  callbackUrl = '/driver';\n                }\n\n                user = {\n                  apiToken: userData.token,\n                  id: userData.data.userResponse.id,\n                  name: userData.data.userResponse.name,\n                  email: userData.data.userResponse.email,\n                  role: userData.data.userResponse.user_type,\n                  image: userData.data.userResponse.imagePath,\n                  callbackUrl: \"\".concat(process.env.NEXTAUTH_URL).concat(callbackUrl)\n                };\n                console.log('user', user);\n                signIn('cheffyCredentials', user);\n              }\n\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](1);\n              //console.log('err', err.toString());\n              message.error(_context.t0.message);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 10]]);\n    }));\n\n    return function onFinish(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(\"div\", {\n      className: \"bg-white dark:bg-gray-800 w-full max-w-sm rounded-lg shadow-md overflow-hidden mx-auto my-auto\",\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: \"py-4 px-6\",\n        children: [/*#__PURE__*/_jsxs(\"h3\", {\n          className: \"mt-1 text-center font-medium text-gray-600 dark:text-gray-200 text-xl\",\n          children: [\"Welcome \", props.userType]\n        }), /*#__PURE__*/_jsx(\"p\", {\n          className: \"mt-1 text-center text-gray-500 dark:text-gray-400\",\n          children: \"Login or create account\"\n        }), /*#__PURE__*/_jsxs(Form, {\n          name: \"normal_login\",\n          className: \"login-form\",\n          initialValues: {\n            remember: true,\n            username: 'test_chef2@gmail.com',\n            password: '123456'\n          },\n          onFinish: onFinish,\n          children: [/*#__PURE__*/_jsx(\"input\", {\n            name: \"csrfToken\",\n            type: \"hidden\",\n            defaultValue: csrfToken\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            name: \"username\",\n            rules: [{\n              required: true,\n              message: 'Please input your Username!'\n            }],\n            children: /*#__PURE__*/_jsx(Input, {\n              placeholder: \"Username\",\n              className: \"mt-2 py-2\"\n            })\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            name: \"password\",\n            rules: [{\n              required: true,\n              message: 'Please input your Password!'\n            }],\n            children: /*#__PURE__*/_jsx(Input, {\n              type: \"password\",\n              placeholder: \"Password\",\n              className: \"mt-2 py-2\"\n            })\n          }), /*#__PURE__*/_jsx(Form.Item, {\n            children: /*#__PURE__*/_jsx(Button, {\n              type: \"primary\",\n              htmlType: \"submit\",\n              className: \"login-form-button\",\n              children: \"Log in\"\n            })\n          })]\n        })]\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"flex items-center justify-center py-4 bg-gray-100 dark:bg-gray-700 text-center\",\n        children: [/*#__PURE__*/_jsx(\"span\", {\n          className: \"text-gray-600 dark:text-gray-200 text-sm\",\n          children: \"Don't have an account? \"\n        }), /*#__PURE__*/_jsx(\"a\", {\n          href: \"#\",\n          className: \"text-blue-600 dark:text-blue-400 font-bold mx-2 text-sm hover:text-blue-500\",\n          children: \"Register\"\n        })]\n      })]\n    })\n  });\n};\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}