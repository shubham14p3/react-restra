{"ast":null,"code":"import { SET_IS_FETCHING_FOOD, SET_ERROR_FETCHING_FOOD, ADD_FOOD_TO_COLLECTION } from './foodTypes';\nimport axiosClient from '../../../utils/axios-config';\nexport const setIsFetchingFood = isFetching => {\n  return {\n    type: SET_IS_FETCHING_FOOD,\n    isFetching\n  };\n};\nexport const setErrorFetchingFood = errorFetching => {\n  return {\n    type: SET_ERROR_FETCHING_FOOD,\n    errorFetching\n  };\n};\nexport const getPlateByID = plateID => {\n  return async dispatch => {\n    try {\n      const res = axiosClient.get(`plate/show/${plateID}`);\n      return res;\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n};\nexport const addFoodToCollection = food => {\n  return {\n    type: ADD_FOOD_TO_COLLECTION,\n    payload: food\n  };\n};\nexport const errorFetchingFood = error => {\n  return dispatch => {\n    dispatch(setIsFetchingFood(true));\n    dispatch(setErrorFetchingFood(false));\n    console.log(error);\n  };\n};\nexport const getCategory = () => {\n  return async dispatch => {\n    try {\n      const res = axiosClient.get(\"/category\");\n      return res;\n    } catch (e) {\n      console.log(e);\n      new Promise.reject(e);\n    }\n  };\n};\nexport const fetchFood = () => {\n  return async (dispatch, getState) => {\n    const {\n      food: {\n        collection,\n        status: {\n          isFetching\n        }\n      }\n    } = getState();\n\n    if (isFetching) {\n      return;\n    }\n\n    dispatch(setErrorFetchingFood(false));\n    dispatch(setIsFetchingFood(true));\n    const request = await axiosClient.get('plate/');\n    const food = request.data;\n\n    try {\n      dispatch(addFoodToCollection(food));\n      dispatch(setIsFetchingFood(false));\n    } catch (error) {\n      return dispatch(setErrorFetchingFood(error));\n    }\n  };\n};","map":null,"metadata":{},"sourceType":"module"}