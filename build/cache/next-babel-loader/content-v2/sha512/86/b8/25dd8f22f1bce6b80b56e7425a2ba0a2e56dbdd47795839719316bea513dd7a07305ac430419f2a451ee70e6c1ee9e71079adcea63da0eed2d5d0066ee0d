{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { useState, useEffect } from \"react\";\nimport { Row, Col, Typography } from \"antd\";\nimport Link from \"next/link\";\nimport { useDispatch } from \"react-redux\";\nimport { mustTryAndRecommendedChef } from \"../../../redux/actions/chef/chefAction\";\nvar Text = Typography.Text;\n\nvar RecommendedChef = function RecommendedChef() {\n  var _useState = useState(\"\"),\n      recommended = _useState[0],\n      setRecommended = _useState[1];\n\n  var dispatch = useDispatch();\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var getMustTryAndRecommended, data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return dispatch(mustTryAndRecommendedChef());\n\n          case 2:\n            getMustTryAndRecommended = _context.sent;\n            data = getMustTryAndRecommended.data;\n            setRecommended(data[\"recommendedChefs\"]);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), []);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Row, {\n      className: \"food-grid mt-16 mb-4 md:mb-10\",\n      gutter: 32,\n      justify: \"start\",\n      align: \"middle\",\n      children: /*#__PURE__*/_jsx(Col, {\n        className: \"my-5\",\n        children: /*#__PURE__*/_jsx(\"label\", {\n          className: \"font-extrabold text-3xl sm:text-4xl lg:text-5xl\",\n          children: \"Recommended Chef\"\n        })\n      })\n    }), /*#__PURE__*/_jsxs(Row, {\n      className: \"food-grid\",\n      justify: \"center\",\n      gutter: 32,\n      align: \"middle\",\n      children: [recommended && recommended.map(function (chef, index) {\n        return index < 6 ? /*#__PURE__*/_jsx(Col, {\n          className: \"gutter-row h-64\",\n          xs: 12,\n          sm: 8,\n          md: 6,\n          lg: 4,\n          xl: 4,\n          xxl: 4,\n          children: /*#__PURE__*/_jsx(Link, {\n            href: \"/food-detail/\".concat(encodeURIComponent(chef.id)),\n            children: /*#__PURE__*/_jsx(\"a\", {\n              children: /*#__PURE__*/_jsxs(\"div\", {\n                className: \"flex flex-col py-6 px-3 items-center\",\n                children: [/*#__PURE__*/_jsx(\"img\", {\n                  className: \"category-icon mb-4\",\n                  src: chef.imagePath,\n                  alt: \"\"\n                }), /*#__PURE__*/_jsx(\"label\", {\n                  className: \"category-label cursor-pointer\",\n                  children: chef.name\n                })]\n              })\n            })\n          })\n        }, chef.id) : \"\";\n      }), recommended && /*#__PURE__*/_jsx(Col, {\n        children: /*#__PURE__*/_jsx(Link, {\n          href: \"/recommended-chef\",\n          children: /*#__PURE__*/_jsx(\"a\", {\n            children: /*#__PURE__*/_jsx(Text, {\n              className: \"text-xl bg-primary px-4 text-white rounded-md py-1\",\n              strong: true,\n              children: \"View More Chefs\"\n            })\n          })\n        })\n      })]\n    })]\n  });\n};\n\nexport default RecommendedChef;","map":null,"metadata":{},"sourceType":"module"}