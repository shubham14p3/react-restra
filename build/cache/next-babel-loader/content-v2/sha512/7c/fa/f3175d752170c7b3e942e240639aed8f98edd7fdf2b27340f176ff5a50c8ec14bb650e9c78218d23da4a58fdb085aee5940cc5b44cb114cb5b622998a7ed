{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as types from \"./userType\";\nimport axiosClient from \"../../../utils/axios-config\";\nexport var getUserInfo = function getUserInfo() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: types.USER_INFO_REQUEST\n              });\n              _context.prev = 1;\n              res = axiosClient.get(\"/user/\");\n              dispatch({\n                type: types.USER_INFO_SUCCESS,\n                payload: res\n              });\n              return _context.abrupt(\"return\", res);\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](1);\n              dispatch({\n                type: types.USER_INFO_FAILURE\n              });\n              return _context.abrupt(\"return\", Promise.reject(_context.t0));\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 7]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":null,"metadata":{},"sourceType":"module"}