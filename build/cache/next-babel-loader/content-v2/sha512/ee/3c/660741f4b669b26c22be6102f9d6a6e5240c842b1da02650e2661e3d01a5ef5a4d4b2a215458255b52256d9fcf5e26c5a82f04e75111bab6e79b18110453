{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { SET_IS_FETCHING_FOOD, SET_ERROR_FETCHING_FOOD, ADD_FOOD_TO_COLLECTION } from './foodTypes';\nimport axiosClient from '../../../utils/axios-config';\nexport var setIsFetchingFood = function setIsFetchingFood(isFetching) {\n  return {\n    type: SET_IS_FETCHING_FOOD,\n    isFetching: isFetching\n  };\n};\nexport var setErrorFetchingFood = function setErrorFetchingFood(errorFetching) {\n  return {\n    type: SET_ERROR_FETCHING_FOOD,\n    errorFetching: errorFetching\n  };\n};\nexport var getPlateByID = function getPlateByID(plateID) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              res = axiosClient.get(\"plate/show/\".concat(plateID));\n              return _context.abrupt(\"return\", res);\n\n            case 5:\n              _context.prev = 5;\n              _context.t0 = _context[\"catch\"](0);\n              return _context.abrupt(\"return\", Promise.reject(_context.t0));\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 5]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var addFoodToCollection = function addFoodToCollection(food) {\n  return {\n    type: ADD_FOOD_TO_COLLECTION,\n    payload: food\n  };\n};\nexport var errorFetchingFood = function errorFetchingFood(error) {\n  return function (dispatch) {\n    dispatch(setIsFetchingFood(true));\n    dispatch(setErrorFetchingFood(false));\n    console.log(error);\n  };\n};\nexport var getCategory = function getCategory() {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              res = axiosClient.get(\"/category\");\n              return _context2.abrupt(\"return\", res);\n\n            case 5:\n              _context2.prev = 5;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n              new Promise.reject(_context2.t0);\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 5]]);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var fetchFood = function fetchFood() {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n      var _getState, _getState$food, collection, isFetching, request, food;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _getState = getState(), _getState$food = _getState.food, collection = _getState$food.collection, isFetching = _getState$food.status.isFetching;\n\n              if (!isFetching) {\n                _context3.next = 3;\n                break;\n              }\n\n              return _context3.abrupt(\"return\");\n\n            case 3:\n              dispatch(setErrorFetchingFood(false));\n              dispatch(setIsFetchingFood(true));\n              _context3.next = 7;\n              return axiosClient.get('plate/');\n\n            case 7:\n              request = _context3.sent;\n              food = request.data;\n              _context3.prev = 9;\n              dispatch(addFoodToCollection(food));\n              dispatch(setIsFetchingFood(false));\n              _context3.next = 17;\n              break;\n\n            case 14:\n              _context3.prev = 14;\n              _context3.t0 = _context3[\"catch\"](9);\n              return _context3.abrupt(\"return\", dispatch(setErrorFetchingFood(_context3.t0)));\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[9, 14]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};","map":null,"metadata":{},"sourceType":"module"}