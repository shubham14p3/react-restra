{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Router from \"next/router\";\nimport NProgress from \"nprogress\";\nvar timer;\nvar state;\nvar activeRequests = 0;\nvar delay = 250;\n\nfunction load() {\n  if (state === \"loading\") {\n    return;\n  }\n\n  state = \"loading\";\n  timer = setTimeout(function () {\n    NProgress.start();\n  }, delay); // only show progress bar if it takes longer than the delay\n}\n\nfunction stop() {\n  if (activeRequests > 0) {\n    return;\n  }\n\n  state = \"stop\";\n  clearTimeout(timer);\n  NProgress.done();\n}\n\nRouter.events.on(\"routeChangeStart\", load);\nRouter.events.on(\"routeChangeComplete\", stop);\nRouter.events.on(\"routeChangeError\", stop);\nvar originalFetch = window.fetch;\nwindow.fetch = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var response,\n      _args = arguments;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (activeRequests === 0) {\n            load();\n          }\n\n          activeRequests++;\n          _context.prev = 2;\n          _context.next = 5;\n          return originalFetch.apply(void 0, _args);\n\n        case 5:\n          response = _context.sent;\n          return _context.abrupt(\"return\", response);\n\n        case 9:\n          _context.prev = 9;\n          _context.t0 = _context[\"catch\"](2);\n          return _context.abrupt(\"return\", Promise.reject(_context.t0));\n\n        case 12:\n          _context.prev = 12;\n          activeRequests -= 1;\n\n          if (activeRequests === 0) {\n            stop();\n          }\n\n          return _context.finish(12);\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee, null, [[2, 9, 12, 16]]);\n}));\nexport default function () {\n  return null;\n}","map":null,"metadata":{},"sourceType":"module"}