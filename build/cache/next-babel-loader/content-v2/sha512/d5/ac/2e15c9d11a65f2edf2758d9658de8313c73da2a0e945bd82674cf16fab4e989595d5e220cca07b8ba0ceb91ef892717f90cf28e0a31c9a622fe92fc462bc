{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { Button, Form, message, Spin, Typography } from 'antd';\nimport React, { useState } from 'react';\nimport axiosClient from '../../../../../utils/axios-config';\nimport OTPInput from './OTPInput';\n\nconst Step2 = ({\n  form,\n  prevStep,\n  nextStep,\n  onClick\n}) => {\n  const {\n    0: token,\n    1: setToken\n  } = useState(\"\");\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    Text\n  } = Typography;\n\n  const continueHandler = async () => {\n    setLoading(true);\n    const {\n      email,\n      email_token,\n      name,\n      password,\n      user_type\n    } = form.getFieldsValue(true); // verify token\n\n    try {\n      const res = await axiosClient.post(\"user/verify-email-token\", {\n        email,\n        email_token\n      });\n      console.log(res); // if user doesn't already exists & is sent verification email\n\n      if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n        message.success(res.message);\n\n        try {\n          const completeRegRes = await axiosClient.post(\"user/complete-registration\", {\n            email,\n            name,\n            password,\n            user_type\n          });\n\n          if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n            message.success(res.message);\n          }\n        } catch (err) {}\n\n        nextStep();\n      }\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n\n      message.error(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message);\n\n      if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data.message) !== null && _error$response2$data !== void 0 && _error$response2$data.includes(\"Already Verified\")) {\n        try {\n          const completeRegRes = await axiosClient.post(\"user/complete-registration\", {\n            email,\n            name,\n            password,\n            user_type\n          });\n          message.success(res.message);\n        } catch (err) {}\n      }\n    }\n\n    setLoading(false);\n    console.log(\"No errors FOUND\");\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"flex flex-row justify-between align-center mb-6\",\n      children: [/*#__PURE__*/_jsx(Text, {\n        className: \"text-4xl font-extrabold\",\n        children: \"Verify Your Account\"\n      }), /*#__PURE__*/_jsx(\"img\", {\n        src: \"/images/close.png\",\n        alt: \"close\",\n        className: \"h-4 w-4 cursor-pointer\",\n        onClick: onClick\n      })]\n    }), /*#__PURE__*/_jsx(Text, {\n      className: \"my-8\",\n      children: \"Enter 4-digit code you have sent received your email Phone number\"\n    }), /*#__PURE__*/_jsxs(Form, {\n      form: form,\n      name: \"signup-form\",\n      autoComplete: \"off\",\n      className: \"mt-10\",\n      layout: \"vertical\",\n      children: [/*#__PURE__*/_jsx(OTPInput, {\n        autoFocus: true,\n        isNumberInput: true,\n        length: 4,\n        className: \"otpContainer flex gap-2\",\n        inputClassName: \"otpInput px-4 py-4 bg-inputBg w-16 h-16\",\n        onChangeOTP: otp => form.setFields([{\n          name: \"email_token\",\n          value: otp\n        }])\n      }), /*#__PURE__*/_jsxs(Button, {\n        className: \"py-6 flex my-4 mt-12 flex-row gap-2 justify-center items-center\",\n        block: true,\n        type: \"primary\",\n        htmlType: \"submit\",\n        onClick: () => continueHandler(),\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          children: \"Continue\"\n        }), loading && /*#__PURE__*/_jsx(Spin, {\n          indicator: /*#__PURE__*/_jsx(LoadingOutlined, {\n            style: {\n              fontSize: 24,\n              color: \"white\"\n            },\n            spin: true\n          })\n        })]\n      }), /*#__PURE__*/_jsxs(Button, {\n        className: \"py-6 flex flex-row gap-2 justify-center items-center mt-0\",\n        block: true,\n        type: \"default\",\n        htmlType: \"submit\",\n        onClick: () => prevStep(),\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          children: \"Back\"\n        }), loading && /*#__PURE__*/_jsx(Spin, {\n          indicator: /*#__PURE__*/_jsx(LoadingOutlined, {\n            style: {\n              fontSize: 24,\n              color: \"white\"\n            },\n            spin: true\n          })\n        })]\n      })]\n    })]\n  });\n};\n\nexport default Step2;","map":null,"metadata":{},"sourceType":"module"}